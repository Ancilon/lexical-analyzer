/* Generated By:JavaCC: Do not edit this line. LexicoConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface LexicoConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int LPAREN = 1;
  /** RegularExpression Id. */
  int RPAREN = 2;
  /** RegularExpression Id. */
  int LBRACKET = 3;
  /** RegularExpression Id. */
  int RBRACKET = 4;
  /** RegularExpression Id. */
  int PROGRAM = 5;
  /** RegularExpression Id. */
  int IDENTIFIER = 6;
  /** RegularExpression Id. */
  int EXECUTE = 7;
  /** RegularExpression Id. */
  int DECLARE = 8;
  /** RegularExpression Id. */
  int CONSTANT = 9;
  /** RegularExpression Id. */
  int VARIABLE = 10;
  /** RegularExpression Id. */
  int ASSING = 11;
  /** RegularExpression Id. */
  int SHOW = 12;
  /** RegularExpression Id. */
  int ACQUIRE = 13;
  /** RegularExpression Id. */
  int PUT = 14;
  /** RegularExpression Id. */
  int CHECK = 15;
  /** RegularExpression Id. */
  int TRESULT = 16;
  /** RegularExpression Id. */
  int URESULT = 17;
  /** RegularExpression Id. */
  int CARRY = 18;
  /** RegularExpression Id. */
  int DIGITO = 19;
  /** RegularExpression Id. */
  int INTEGER = 20;
  /** RegularExpression Id. */
  int REAL = 21;
  /** RegularExpression Id. */
  int STRING = 22;
  /** RegularExpression Id. */
  int BOOLEAN = 23;
  /** RegularExpression Id. */
  int TRUE = 24;
  /** RegularExpression Id. */
  int UNTRUE = 25;
  /** RegularExpression Id. */
  int SUM = 26;
  /** RegularExpression Id. */
  int DIV = 27;
  /** RegularExpression Id. */
  int DIVI = 28;
  /** RegularExpression Id. */
  int REST = 29;
  /** RegularExpression Id. */
  int MINUS = 30;
  /** RegularExpression Id. */
  int MULT = 31;
  /** RegularExpression Id. */
  int EQUAL = 32;
  /** RegularExpression Id. */
  int DIFF = 33;
  /** RegularExpression Id. */
  int LESSTHAN = 34;
  /** RegularExpression Id. */
  int GREATERTHAN = 35;
  /** RegularExpression Id. */
  int LESSEQUAL = 36;
  /** RegularExpression Id. */
  int GREATEREQUAL = 37;
  /** RegularExpression Id. */
  int AND = 38;
  /** RegularExpression Id. */
  int OR = 39;
  /** RegularExpression Id. */
  int NOT = 40;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\"program\"",
    "<IDENTIFIER>",
    "\"execute this\"",
    "\"declare this\"",
    "\"as constant\"",
    "\"as variable\"",
    "\"assign this\"",
    "\"show this\"",
    "\"acquire this\"",
    "\"put this\"",
    "\"check this\"",
    "\"true result\"",
    "\"untrue result\"",
    "\"carry out this\"",
    "<DIGITO>",
    "\"integer\"",
    "\"real\"",
    "\"string\"",
    "\"boolean\"",
    "\"true\"",
    "\"untrue\"",
    "\"+\"",
    "\"/\"",
    "\"%\"",
    "\"%%\"",
    "\"-\"",
    "\"*\"",
    "\"==\"",
    "\"!=\"",
    "\"<<\"",
    "\">>\"",
    "\"<<=\"",
    "\">>=\"",
    "\"&\"",
    "\"|\"",
    "\"!\"",
    "\" \"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\r\\n\"",
    "\"\\t\"",
  };

}
