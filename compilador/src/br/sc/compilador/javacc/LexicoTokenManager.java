/* Generated By:JavaCC: Do not edit this line. LexicoTokenManager.java */
import java.io.*;
import java.util.*;

/** Token Manager. */
public class LexicoTokenManager implements LexicoConstants
{

  /** Debug output. */
  public  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private final int jjStopStringLiteralDfa_0(int pos, long active0)
{
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0)
{
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0), pos + 1);
}
private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private int jjMoveStringLiteralDfa0_0()
{
   switch(curChar)
   {
      case 13:
         jjmatchedKind = 8;
         return jjMoveStringLiteralDfa1_0(0x200L);
      default :
         return jjMoveNfa_0(6, 0);
   }
}
private int jjMoveStringLiteralDfa1_0(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0);
      return 1;
   }
   switch(curChar)
   {
      case 10:
         if ((active0 & 0x200L) != 0L)
            return jjStopAtPos(1, 9);
         break;
      default :
         break;
   }
   return jjStartNfa_0(0, active0);
}
static final long[] jjbitVec0 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private int jjMoveNfa_0(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 142;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 6:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 2)
                        kind = 2;
                     jjCheckNAddStates(0, 2);
                  }
                  else if ((0xaf6200000000L & l) != 0L)
                  {
                     if (kind > 5)
                        kind = 5;
                  }
                  else if (curChar == 62)
                     jjAddStates(3, 4);
                  else if (curChar == 60)
                     jjAddStates(5, 6);
                  else if (curChar == 34)
                     jjCheckNAddTwoStates(50, 51);
                  else if (curChar == 61)
                     jjCheckNAdd(46);
                  if (curChar == 47)
                     jjAddStates(7, 8);
                  else if (curChar == 33)
                     jjCheckNAdd(46);
                  else if (curChar == 37)
                     jjstateSet[jjnewStateCnt++] = 44;
                  break;
               case 43:
                  if ((0xaf6200000000L & l) != 0L && kind > 5)
                     kind = 5;
                  break;
               case 44:
                  if (curChar == 37 && kind > 5)
                     kind = 5;
                  break;
               case 45:
                  if (curChar == 37)
                     jjstateSet[jjnewStateCnt++] = 44;
                  break;
               case 46:
                  if (curChar == 61 && kind > 5)
                     kind = 5;
                  break;
               case 47:
                  if (curChar == 61)
                     jjCheckNAdd(46);
                  break;
               case 48:
                  if (curChar == 33)
                     jjCheckNAdd(46);
                  break;
               case 49:
                  if (curChar == 34)
                     jjCheckNAddTwoStates(50, 51);
                  break;
               case 50:
                  if ((0xfffffffbffffdbffL & l) != 0L)
                     jjCheckNAddTwoStates(50, 51);
                  break;
               case 51:
                  if ((0x2400L & l) != 0L && kind > 13)
                     kind = 13;
                  break;
               case 52:
                  if (curChar == 60)
                     jjAddStates(5, 6);
                  break;
               case 53:
                  if (curChar == 60 && kind > 5)
                     kind = 5;
                  break;
               case 54:
                  if (curChar == 60)
                     jjCheckNAdd(46);
                  break;
               case 55:
                  if (curChar == 62)
                     jjAddStates(3, 4);
                  break;
               case 56:
                  if (curChar == 62 && kind > 5)
                     kind = 5;
                  break;
               case 57:
                  if (curChar == 62)
                     jjCheckNAdd(46);
                  break;
               case 114:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 2)
                     kind = 2;
                  jjCheckNAddStates(0, 2);
                  break;
               case 115:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 116;
                  break;
               case 116:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 3)
                     kind = 3;
                  jjstateSet[jjnewStateCnt++] = 117;
                  break;
               case 117:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 3)
                     kind = 3;
                  jjstateSet[jjnewStateCnt++] = 118;
                  break;
               case 118:
                  if ((0x3ff000000000000L & l) != 0L && kind > 3)
                     kind = 3;
                  break;
               case 119:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(9, 12);
                  break;
               case 120:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(115);
                  break;
               case 121:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(120, 115);
                  break;
               case 122:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(13, 15);
                  break;
               case 123:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 2)
                     kind = 2;
                  jjCheckNAddTwoStates(124, 125);
                  break;
               case 124:
                  if ((0x3ff000000000000L & l) != 0L && kind > 2)
                     kind = 2;
                  break;
               case 125:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 2)
                     kind = 2;
                  jjCheckNAdd(124);
                  break;
               case 126:
                  if (curChar == 47)
                     jjAddStates(7, 8);
                  break;
               case 127:
                  if (curChar != 47)
                     break;
                  if (kind > 10)
                     kind = 10;
                  jjCheckNAddTwoStates(128, 129);
                  break;
               case 128:
                  if ((0xfffffffbffffdbffL & l) == 0L)
                     break;
                  if (kind > 10)
                     kind = 10;
                  jjCheckNAddTwoStates(128, 129);
                  break;
               case 130:
                  if ((0x8400002400L & l) == 0L)
                     break;
                  if (kind > 10)
                     kind = 10;
                  jjCheckNAddTwoStates(128, 129);
                  break;
               case 131:
                  if (curChar != 10)
                     break;
                  if (kind > 10)
                     kind = 10;
                  jjCheckNAddTwoStates(128, 129);
                  break;
               case 132:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 131;
                  break;
               case 133:
                  if (curChar == 42)
                     jjCheckNAddStates(16, 19);
                  break;
               case 134:
                  if ((0x2400L & l) != 0L)
                     jjCheckNAddStates(16, 19);
                  break;
               case 135:
                  if ((0xfffffffbffffdbffL & l) != 0L)
                     jjCheckNAddStates(16, 19);
                  break;
               case 137:
                  if ((0x8400002400L & l) != 0L)
                     jjCheckNAddStates(16, 19);
                  break;
               case 138:
                  if (curChar == 47 && kind > 11)
                     kind = 11;
                  break;
               case 139:
                  if (curChar == 42)
                     jjstateSet[jjnewStateCnt++] = 138;
                  break;
               case 140:
                  if (curChar == 10)
                     jjCheckNAddStates(16, 19);
                  break;
               case 141:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 140;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 6:
                  if ((0x1000000028000000L & l) != 0L)
                  {
                     if (kind > 5)
                        kind = 5;
                  }
                  else if (curChar == 116)
                     jjAddStates(20, 21);
                  else if (curChar == 114)
                     jjAddStates(22, 23);
                  else if (curChar == 115)
                     jjAddStates(24, 25);
                  else if (curChar == 97)
                     jjCheckNAddStates(26, 28);
                  else if (curChar == 99)
                     jjAddStates(29, 31);
                  else if (curChar == 112)
                     jjAddStates(32, 33);
                  else if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 41;
                  else if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 35;
                  else if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 28;
                  else if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 21;
                  else if (curChar == 118)
                     jjstateSet[jjnewStateCnt++] = 18;
                  else if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 11;
                  else if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 0:
                  if (curChar == 101 && kind > 1)
                     kind = 1;
                  break;
               case 1:
                  if (curChar == 116)
                     jjCheckNAdd(0);
                  break;
               case 2:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 3:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 4:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 5:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 4;
                  break;
               case 7:
               case 86:
                  if (curChar == 114)
                     jjCheckNAdd(0);
                  break;
               case 8:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 7;
                  break;
               case 9:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 8;
                  break;
               case 10:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 9;
                  break;
               case 11:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 10;
                  break;
               case 12:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 11;
                  break;
               case 13:
                  if (curChar == 108)
                     jjCheckNAdd(0);
                  break;
               case 14:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 15:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 14;
                  break;
               case 16:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 17:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 16;
                  break;
               case 18:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 17;
                  break;
               case 19:
                  if (curChar == 118)
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 20:
                  if (curChar == 116 && kind > 1)
                     kind = 1;
                  break;
               case 21:
               case 65:
                  if (curChar == 117)
                     jjCheckNAdd(20);
                  break;
               case 22:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 23:
                  if (curChar == 114 && kind > 1)
                     kind = 1;
                  break;
               case 24:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 23;
                  break;
               case 25:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 24;
                  break;
               case 26:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 25;
                  break;
               case 27:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 26;
                  break;
               case 28:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 27;
                  break;
               case 29:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 28;
                  break;
               case 30:
                  if (curChar == 110 && kind > 1)
                     kind = 1;
                  break;
               case 31:
                  if (curChar == 97)
                     jjCheckNAdd(30);
                  break;
               case 32:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 33:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 32;
                  break;
               case 34:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 33;
                  break;
               case 35:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 34;
                  break;
               case 36:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 35;
                  break;
               case 37:
                  if (curChar == 101 && kind > 4)
                     kind = 4;
                  break;
               case 38:
               case 112:
                  if (curChar == 117)
                     jjCheckNAdd(37);
                  break;
               case 39:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 38;
                  break;
               case 40:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 39;
                  break;
               case 41:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 40;
                  break;
               case 42:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 41;
                  break;
               case 43:
                  if ((0x1000000028000000L & l) != 0L && kind > 5)
                     kind = 5;
                  break;
               case 50:
                  jjAddStates(34, 35);
                  break;
               case 58:
                  if (curChar == 112)
                     jjAddStates(32, 33);
                  break;
               case 59:
                  if (curChar == 109 && kind > 1)
                     kind = 1;
                  break;
               case 60:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 59;
                  break;
               case 61:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 60;
                  break;
               case 62:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 61;
                  break;
               case 63:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 62;
                  break;
               case 64:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 63;
                  break;
               case 66:
                  if (curChar == 99)
                     jjAddStates(29, 31);
                  break;
               case 67:
                  if (curChar == 110)
                     jjCheckNAdd(20);
                  break;
               case 68:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 67;
                  break;
               case 69:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 68;
                  break;
               case 70:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 69;
                  break;
               case 71:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 70;
                  break;
               case 72:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 71;
                  break;
               case 73:
                  if (curChar == 107 && kind > 1)
                     kind = 1;
                  break;
               case 74:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 73;
                  break;
               case 75:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 74;
                  break;
               case 76:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 75;
                  break;
               case 77:
                  if (curChar == 121 && kind > 1)
                     kind = 1;
                  break;
               case 78:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 77;
                  break;
               case 79:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 78;
                  break;
               case 80:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 79;
                  break;
               case 81:
                  if (curChar == 97)
                     jjCheckNAddStates(26, 28);
                  break;
               case 82:
                  if (curChar == 103)
                     jjCheckNAdd(30);
                  break;
               case 83:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 82;
                  break;
               case 84:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 83;
                  break;
               case 85:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 84;
                  break;
               case 87:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 86;
                  break;
               case 88:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 87;
                  break;
               case 89:
                  if (curChar == 113)
                     jjstateSet[jjnewStateCnt++] = 88;
                  break;
               case 90:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 89;
                  break;
               case 91:
                  if (curChar == 115 && kind > 1)
                     kind = 1;
                  break;
               case 92:
                  if (curChar == 115)
                     jjAddStates(24, 25);
                  break;
               case 93:
                  if (curChar == 119 && kind > 1)
                     kind = 1;
                  break;
               case 94:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 93;
                  break;
               case 95:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 94;
                  break;
               case 96:
                  if (curChar == 103 && kind > 1)
                     kind = 1;
                  break;
               case 97:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 96;
                  break;
               case 98:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 97;
                  break;
               case 99:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 98;
                  break;
               case 100:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 99;
                  break;
               case 101:
                  if (curChar == 114)
                     jjAddStates(22, 23);
                  break;
               case 102:
                  if (curChar == 108)
                     jjCheckNAdd(20);
                  break;
               case 103:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 102;
                  break;
               case 104:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 103;
                  break;
               case 105:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 104;
                  break;
               case 106:
                  if (curChar == 108 && kind > 1)
                     kind = 1;
                  break;
               case 107:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 106;
                  break;
               case 108:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 107;
                  break;
               case 109:
                  if (curChar == 116)
                     jjAddStates(20, 21);
                  break;
               case 110:
                  if (curChar == 105)
                     jjCheckNAdd(91);
                  break;
               case 111:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 110;
                  break;
               case 113:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 112;
                  break;
               case 128:
                  if ((0xffffffffefffffffL & l) == 0L)
                     break;
                  if (kind > 10)
                     kind = 10;
                  jjCheckNAddTwoStates(128, 129);
                  break;
               case 129:
                  if (curChar == 92)
                     jjAddStates(36, 37);
                  break;
               case 130:
                  if ((0x14404410000000L & l) == 0L)
                     break;
                  if (kind > 10)
                     kind = 10;
                  jjCheckNAddTwoStates(128, 129);
                  break;
               case 135:
                  if ((0xffffffffefffffffL & l) != 0L)
                     jjCheckNAddStates(16, 19);
                  break;
               case 136:
                  if (curChar == 92)
                     jjAddStates(38, 39);
                  break;
               case 137:
                  if ((0x14404410000000L & l) != 0L)
                     jjCheckNAddStates(16, 19);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 50:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(34, 35);
                  break;
               case 128:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 10)
                     kind = 10;
                  jjAddStates(40, 41);
                  break;
               case 135:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(16, 19);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 142 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
static final int[] jjnextStates = {
   115, 119, 123, 56, 57, 53, 54, 127, 133, 120, 115, 121, 122, 120, 115, 121, 
   134, 135, 136, 139, 111, 113, 105, 108, 95, 100, 85, 90, 91, 72, 76, 80, 
   64, 65, 50, 51, 130, 132, 137, 141, 128, 129, 
};

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null, null, null, null, null, null, null, 
null, };

/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
};
static final long[] jjtoToken = {
   0x3fL, 
};
static final long[] jjtoSkip = {
   0x2fc0L, 
};
static final long[] jjtoSpecial = {
   0x2000L, 
};
protected SimpleCharStream input_stream;
private final int[] jjrounds = new int[142];
private final int[] jjstateSet = new int[284];
private final StringBuilder jjimage = new StringBuilder();
private StringBuilder image = jjimage;
private int jjimageLen;
private int lengthOfMatch;
protected char curChar;
/** Constructor. */
public LexicoTokenManager(SimpleCharStream stream){
   if (SimpleCharStream.staticFlag)
      throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");
   input_stream = stream;
}

/** Constructor. */
public LexicoTokenManager(SimpleCharStream stream, int lexState){
   this(stream);
   SwitchTo(lexState);
}

/** Reinitialise parser. */
public void ReInit(SimpleCharStream stream)
{
   jjmatchedPos = jjnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
private void ReInitRounds()
{
   int i;
   jjround = 0x80000001;
   for (i = 142; i-- > 0;)
      jjrounds[i] = 0x80000000;
}

/** Reinitialise parser. */
public void ReInit(SimpleCharStream stream, int lexState)
{
   ReInit(stream);
   SwitchTo(lexState);
}

/** Switch to specified lex state. */
public void SwitchTo(int lexState)
{
   if (lexState >= 1 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
   else
      curLexState = lexState;
}

protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
public Token getNextToken() 
{
  Token specialToken = null;
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(java.io.IOException e)
   {
      jjmatchedKind = 0;
      matchedToken = jjFillToken();
      matchedToken.specialToken = specialToken;
      return matchedToken;
   }
   image = jjimage;
   image.setLength(0);
   jjimageLen = 0;

   try { input_stream.backup(0);
      while (curChar <= 32 && (0x100000400L & (1L << curChar)) != 0L)
         curChar = input_stream.BeginToken();
   }
   catch (java.io.IOException e1) { continue EOFLoop; }
   jjmatchedKind = 0x7fffffff;
   jjmatchedPos = 0;
   curPos = jjMoveStringLiteralDfa0_0();
   if (jjmatchedKind != 0x7fffffff)
   {
      if (jjmatchedPos + 1 < curPos)
         input_stream.backup(curPos - jjmatchedPos - 1);
      if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
      {
         matchedToken = jjFillToken();
         matchedToken.specialToken = specialToken;
         TokenLexicalActions(matchedToken);
         return matchedToken;
      }
      else
      {
         if ((jjtoSpecial[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
         {
            matchedToken = jjFillToken();
            if (specialToken == null)
               specialToken = matchedToken;
            else
            {
               matchedToken.specialToken = specialToken;
               specialToken = (specialToken.next = matchedToken);
            }
            SkipLexicalActions(matchedToken);
         }
         else
            SkipLexicalActions(null);
         continue EOFLoop;
      }
   }
   int error_line = input_stream.getEndLine();
   int error_column = input_stream.getEndColumn();
   String error_after = null;
   boolean EOFSeen = false;
   try { input_stream.readChar(); input_stream.backup(1); }
   catch (java.io.IOException e1) {
      EOFSeen = true;
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
      if (curChar == '\n' || curChar == '\r') {
         error_line++;
         error_column = 0;
      }
      else
         error_column++;
   }
   if (!EOFSeen) {
      input_stream.backup(1);
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
   }
   throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
  }
}

void SkipLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      case 13 :
         image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
     System.err.println("Linha "+ input_stream.getEndLine()+ " Coluna "+ input_stream.getEndColumn() +" Caractere invalido encontrado \u005c\u005cn: " + image +" Era esperado uma aspa");
         break;
      default :
         break;
   }
}
void TokenLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      case 1 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
            System.out.println(image + "\u005ct" + matchedToken.beginLine + "\u005ct" +
        matchedToken.beginColumn + "\u005ct" + matchedToken.kind + " Palavra Reservada");
         break;
      case 2 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
            System.out.println(image + "\u005ct" + matchedToken.beginLine + "\u005ct" +
      matchedToken.beginColumn + "\u005ct" + matchedToken.kind + " Constantes Inteiras");
         break;
      case 3 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
            System.out.println(image + "\u005ct" + matchedToken.beginLine + "\u005ct" +
      matchedToken.beginColumn + "\u005ct" + matchedToken.kind + " Constantes Reais");
         break;
      case 4 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
        System.out.println(image + "\u005ct" + matchedToken.beginLine + "\u005ct" +
      matchedToken.beginColumn + "\u005ct" + matchedToken.kind + " Constantes Reais");
         break;
      case 5 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
        System.out.println(image + "\u005ct" + matchedToken.beginLine + "\u005ct" +
      matchedToken.beginColumn + "\u005ct" + matchedToken.kind + " Simbolos Especiais");
         break;
      default :
         break;
   }
}
private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

}
